// An `Any` contains an arbitrary serialized message as bytes, along with a URL that acts as a globally unique identifier for and resolves to that message's type.

syntax = "proto3";


import "google/protobuf/any.proto";


// Issuer Create Schema
message IssuerCreateSchemaRequest{
	string IssuerDid = 1;
	string Name = 2;
	string Version = 3;
	string Attrs = 4;
}
message IssuerCreateSchemaResponse{
	string SchemaId = 1;
	string SchemaJson = 2;
}

// issuer create and store credential def
message IssuerCreateAndStoreCredentialDefRequest{
	int64 WalletHandle = 1;
	string IssuerDid = 2;
	string SchemaJson = 3;
	string Tag = 4;
	string SignatureType = 5;
	string ConfigJson = 6;
}
message IssuerCreateAndStoreCredentialDefResponse{
	string CredDefId = 1;
	string CredDefJson = 2;
}

// Issuer Create And Store Revoc Reg
message IssuerCreateAndStoreRevocRegRequest{
	int64 WalletHandle = 1;
	string IssuerDid = 2;
	string RevocDefType = 3;
	string Tag = 4;
	string CredDefId = 5;
	string ConfigJSon = 6;
	int64 TailsWriterHandle = 7;
}
message IssuerCreateAndStoreRevocRegResponse{
	string RevocRegId = 1;
	string RevocRegDefJson = 2;
	string RevocRegEntryJson = 3;
}

// Issuer Create Credential Offer
message IssuerCreateCredentialOfferRequest{
	int64 WalletHandle = 1;
	string CredDefId = 2;
}
message IssuerCreateCredentialOfferResponse{
	string SchemaId = 1;
	string CredDefId = 2;
	string Nonce = 3;
	google.protobuf.Any KeyCorrectnessProof = 4;
}

// Issuer Create Credential
message IssuerCreateCredentialRequest{
	int64 WalletHandle = 1;
	string CredOfferJson = 2;
	string CredReqJson = 3;
	string CredValuesJson = 4;
	string RevRegId = 5;
	string BlobStorageReaderHandle = 6;
}
message IssuerCreateCredentialResponse{
	CredJsonMessage CredJson = 1;
	string CredRevocId = 2;
	string RevocRegDeltaJson = 3;
}
message CredJsonMessage{
	string SchemaId = 1;
	string CredDefId = 2;
	string RevRegDefID = 3;
	google.protobuf.Any Values = 4;
	google.protobuf.Any Signature = 5;
	google.protobuf.Any SignatureCorrectnessProof = 6;
}

// Issuer Revoke Credential
message IssuerRevokeCredentialRequest{
	int64 WalletHandle = 1;
	int64 BlobStorageReaderHandle = 2;
	string RevRegId = 3;
	string CredRevocId = 4;
}
message IssuerRevokeCredentialResponse{
	string RevocationRegistryDeltaJson = 1;
}

// Issuer Merge Revocation Registry Deltas
message IssuerMergeRevocationRegistryDeltasRequest{
	string RevRegDeltaJson = 1;
	string OtherRevRegDeltaJson = 2;
}
message IssuerMergeRevocationRegistryDeltasResponse{
	string MergedRevocationRegistryDelta = 1;
}

// Prover Create Master Secret
message ProverCreateMasterSecretRequest{
	int64 WalletHandle = 1;
	string MasterSecretName = 2;
}
message ProverCreateMasterSecretResponse{
	string GeneratedMasterSecretId = 1;
}

// Prover Create Credential Req
message ProverCreateCredentialReqRequest{
	int64 WaletHandle = 1;
	string ProverDid = 2;
	string CredOfferJSon = 3;
	string CredDefJson = 4;
	string MasterSecretId = 5;
}
message ProverCreateCredentialReqResponse{
	CredReqJsonMessage CredReqJson = 1;
	string CredReqMetadataJson = 2;
}
message CredReqJsonMessage{
	string ProverDid = 1;
	string CredDefId = 2;
	google.protobuf.Any BlindedMs = 3;
	google.protobuf.Any BlindedMsCorrectnessProof = 4;
	string Nonce = 5;
}

// Prover Store Credential
message ProverStoreCredentialRequest{
	int64 WalletHandle = 1;
	string CredId = 2;
	string CredReqMetadataJson = 3;
	string CredJson = 4;
	string CredDefJson = 5;
	string RevRegDefJson = 6;
}
message ProverStoreCredentialResponse{
	string CredId = 1;
}

// Prover Get Credential
message ProverGetCredentialRequest{
	int64 WalletHandle = 1;
	string CredId = 2;
}
message ProverGetCredentialResponse{
	string Referent = 1;
	string Attrs = 2;
	string SchemaId = 3;
	string CredDefId = 4;
	string RevRegId = 5;
	string CredRevId = 6;
}

// Prover Get Credentials
message ProverGetCredentialsRequest{
	int64 WalletHandle = 1;
	FilterJsonMessage FilterJson = 2;
}
message FilterJsonMessage{
	string SchemaId = 1;
	string SchemaIssuerDid = 2;
	string SchemaName = 3;
	string SchemaVersion = 4;
	string IssuerDid = 5;
	string CredDefId = 6;
}
message ProverGetCredentialsResponse{
	repeated CredentialsJsonMessage CredentialsJson = 1;
}
message CredentialsJsonMessage{
	string Referent = 1;
	string Attrs = 2;
	string SchemaID = 3;
	string CredDefId = 4;
	string RevRegId = 5;
	string CredRevId = 6;
}

// Prover Seach Credentials
message ProverSeachCredentialsRequest{
	int64 WalletHandle = 1;
	string QueryJson = 2;
}
message ProverSeachCredentialsResponse{
	int64 SearchHandle = 1;
	int64 TotalCount = 2;
}

// Prover Fetch Credentials
message ProverFetchCredentialsRequest{
	int64 SearchHandle = 1;
	int64 Count = 2;
}
message ProverFetchCredentialsResponse{
	repeated CredentialsJsonMessage CredentialsJson = 1;
}

// Prover Close Credentials Search
message ProverCloseCredentialsSearchRequest{
	int64 SearchHandle = 1;
}
message ProverCloseCredentialsSearchResponse{
	string Resp = 1;
}

// Prover Get Credentials For Proof Req
message ProverGetCredentialsForProofReqRequest{
	int64 WalletHandle = 1;
	ProofRequestJsonMessage ProofRequestJson = 2;
}
message ProofRequestJsonMessage{
	string Name = 1;
	string Version = 2;
	string Nonce = 3;
	string RequestedAttributes = 4;
	string RequestedPredicates = 5;
	google.protobuf.Any NonRevoked = 6;
}
message ProverGetCredentialsForProofReqResponse{
	string RequestedAttrs = 1;
	string RequestedPredicates = 2;
}

// Prover Search Credentials For Proof Req
message ProverSearchCredentialsForProofReqRequest{
	int64 WalletHandle = 1;
	ProofRequestJsonMessage ProofRequestJson = 2;
	ExtraQueryJsonMessage ExtraQueryJson = 3;
}
message ExtraQueryJsonMessage{
	google.protobuf.Any AttrReferent = 1;
	google.protobuf.Any PredicateReferent = 2;
}
message ProverSearchCredentialsForProofReqResponse{
	int64 SearchHandle = 1;
}

// Prover Fetch Credentials For Proof Req
message ProverFetchCredentialsForProofReqRequest{
	int64 SearchHandle = 1;
	string ItemReference = 2;
	int64 Count = 3;
}
message ProverFetchCredentialsForProofReqResponse{
	repeated CredentialsGivenProofRequest CredentialsJson = 1;
}
message CredentialsGivenProofRequest{
	CredentialInfo CredInfo = 1;
	google.protobuf.Any Interval = 2;
}
message CredentialInfo{
	string Referent = 1;
	string Attrs = 2;
	string SchemaId = 3;
	string CredDefId = 4;
	int64 RevRegId = 5;
	int64 CredRevId = 6;
}

// Prover Close Credentials Search For Proof Req
message ProverCloseCredentialsSearchForProofReqRequest{
	int64 SearchHandle = 1;
}
message ProverCloseCredentialsSearchForProofReqResponse{
	string Resp = 1;
}

// Prover Create Proof
message ProverCreateProofRequest{
	int64 WalletHandle = 1;
	ProofReqJsonMessage  ProofReqJson = 2;
	RequestedCredentialsJsonMessage RequestedCredentialsJson = 3;
	string MasterSecretName = 4;
	string SchemasJson = 5;
	string CredentialDefsJson = 6;
	string RevStatesJson = 7;
}
message ProofReqJsonMessage{
	string Name = 1;
	string Version = 2;
	string Nonce = 3;
	string RequestedAttributes = 4;
	string RequestedPredicates = 5;
	NonRevocIntervalMessage NonRevoInterval = 6;
}
message NonRevocIntervalMessage{
	int64 From = 1;
	int64 To = 2;
}
message RequestedCredentialsJsonMessage{
	string SelfAttestedAttributes = 1;
	string RequestedAttributes = 2;
	string RequestedPredicates = 3;
}
message ProverCreateProofResponse{
	string Requested = 1;
	string Proof = 2;
	string identifiers = 3;
}

// Verifier Verify Proof
message VerifierVerifyProofRequest{
	ProofRequestJsonMessage ProofRequestJson = 1;
	string ProofJson = 2;
	string SchemasJson = 3;
	string CredentialDefsJson = 4;
	string RevRegDefsJson = 5;
	string RevRegJson = 6;
}
message VerifierVerifyProofResponse{
	bool Valid = 1;
}

// Create Revocation State
message CreateRevocationStateRequest{
	int64 BlobStorageReaderHandle = 1;
	string RevRegDefJson = 2;
	string RevRegDeltaJson = 3;
	int64 Timestamp = 4;
	string CredRevId = 5;
}
message CreateRevocationStateResponse{
	string RevReg = 1;
	string Witness = 2;
	int64 Timestamp = 3;
}

// Update Revocation State
message UpdateRevocationStateRequest{
	int64 BlobStorageReaderHandle = 1;
	string RevStateJson = 2;
	string RevRegDefJson = 3;
	string RevRegDeltaJson = 4;
	int64 Timestamp = 5;
	string CredRevId = 6;
}
message UpdateRevocationStateResponse{
	string RevReg = 1;
	string Witness = 2;
	int64 Timestamp = 3;
}